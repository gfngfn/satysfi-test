@require: stdjareport
@require: deco
@import: external/satysfi-lib/string
@import: test48-pp-small


let paddings-surround = (2pt, 2pt, 2pt, 2pt)
let color-surround = Color.gray 0.2

let deco-surround (x, y) w h d =
  let w-extra = 6pt in
  let path =
    Gr.polygon (x, y -' d) [
      (x, y +' h);
      (x +' w, y +' h);
      (x +' w +' w-extra, y +' (h -' d) *' 0.5);
      (x +' w, y -' d);
    ]
  in
  [ fill color-surround path ]


let-inline ctx \header-name it =
  let ctx = ctx |> set-text-color Color.white in
  inline-frame-outer paddings-surround deco-surround (read-inline ctx it)


let-inline-macro \header@(~s) =
  ~(
    match small-parser |> Parser.run s with
    | None ->
        error `parse error (1)`

    | Some((sp1, sp2), rest) ->
        if String.is-empty rest then
          &(
            let it1 = embed-string (~(lift-string sp1)) in
            let it2 = embed-string (~(lift-string sp2)) in
            {\header-name{#it1;} #it2;}
          )
        else
          error `parse error (2)`
  )
in

document (|
  title  = {Preprocess};
  author = {gfn};
|) '<
  +p{
    \header@(~`Content-Type: application/json`);
  }
>
